(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{326:function(a,r,s){"use strict";s.r(r);var e=s(0),t=Object(e.a)({},(function(){var a=this,r=a.$createElement,s=a._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"javascript-array-常用方法整理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-array-常用方法整理"}},[a._v("#")]),a._v(" JavaScript array 常用方法整理")]),a._v(" "),s("h3",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[a._v("#")]),a._v(" concat()")]),a._v(" "),s("ul",[s("li",[a._v("array1.concat(array2,array3,...,arrayX) 方法用于连接两个或多个数组。该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。")]),a._v(" "),s("li",[a._v("array2, array3, ..., arrayX\t必需。该参数可以是具体的值，也可以是数组对象。可以是任意多个。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr1 = ['1','2'];\nvar arr2 = ['3','4'];\nvar arr3 = arr1.concat(arr2);//['1','2','3','4']\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ul",[s("li",[a._v("es6 提供了更简便的方式")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr1 = ['1','2'];\nvar arr2 = ['3','4'];\nvar arr3 = [...arr1,...arr2];//['1','2','3','4']\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[a._v("#")]),a._v(" filter()")]),a._v(" "),s("ul",[s("li",[a._v("array.filter(function(currentValue,index,arr), thisValue) 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。")]),a._v(" "),s("li",[a._v("function(currentValue, index,arr)\t必须。函数，数组中的每个元素都会执行这个函数; currentValue\t必须。当前元素的值; index 可选。当期元素的索引值; arr 可选。当期元素属于的数组对象")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var age = ['18','20','10','25','16'];\nvar ageNew = age.filter(function(val){\n    return val>18;\n}) \nconsole.log(ageNew);//[\"20\", \"25\"]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"indexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[a._v("#")]),a._v(" indexOf()")]),a._v(" "),s("ul",[s("li",[a._v("array.indexOf(item,start) 返回某个指定的字符串值在字符串中首次出现的位置。如果在数组中没找到字符串则返回 -1。")]),a._v(" "),s("li",[a._v("item\t必须。查找的元素。start\t可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = ['zhangsan','lisi','wanwu'];\nvar a = arr.indexOf('xiaoming');//-1\nvar b = arr.indexOf('lisi');//1\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[a._v("#")]),a._v(" join()")]),a._v(" "),s("ul",[s("li",[a._v("array.join(separator) 方法用于把数组中的所有元素转换一个字符串,元素是通过指定的分隔符进行分隔的")]),a._v(" "),s("li",[a._v("separator 可选。指定要使用的分隔符。如果省略该参数，则使用逗号作为分隔符。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = ['my','name','is','lisi'];\nvar str = arr.join(' ');// my name is lisi\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" map()")]),a._v(" "),s("ul",[s("li",[a._v("array.map(function(currentValue,index,arr), thisValue) 返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。")]),a._v(" "),s("li",[a._v("function(currentValue, index,arr)\t必须。函数，数组中的每个元素都会执行这个函数; currentValue\t必须。当前元素的值; index 可选。当期元素的索引值; arr 可选。当期元素属于的数组对象")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2,4,6,8];\nvar arrNew = arr.map((value)=>{\n    return value*10\n})\nconsole.log(arrNew);//[20,40,60,80]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop"}},[a._v("#")]),a._v(" pop()")]),a._v(" "),s("ul",[s("li",[a._v("array.pop() 方法用于删除数组的最后一个元素并返回删除的元素;")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2,4,6,8];\nvar a = arr.pop();\nconsole.log(a,arr);//8,[2,4,6]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[a._v("#")]),a._v(" push()")]),a._v(" "),s("ul",[s("li",[a._v("array.push(item1, item2, ..., itemX) 方法可向数组的末尾添加一个或多个元素，并返回新的长度。")]),a._v(" "),s("li",[a._v("item1, item2, ..., itemX\t必需。要添加到数组的元素。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2,4,6,8];\nvar a = arr.push(10,12);\nconsole.log(a,arr);//6,[2,4,6,8,10,12]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"shift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shift"}},[a._v("#")]),a._v(" shift()")]),a._v(" "),s("ul",[s("li",[a._v("array.shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2,4,6,8];\nvar a = arr.shift();\nconsole.log(a,arr);//2,[4,6,8]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unshift"}},[a._v("#")]),a._v(" unshift()")]),a._v(" "),s("ul",[s("li",[a._v("array.unshift(item1,item2, ..., itemX) 方法可向数组的开头添加一个或更多元素，并返回新的长度。")]),a._v(" "),s("li",[a._v("item1, item2, ..., itemX\t必需。要添加到数组的元素。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2,4,6,8];\nvar a = arr.unshift(10,12);\nconsole.log(a,arr);//6,[10,12,2,4,6,8]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[a._v("#")]),a._v(" reverse()")]),a._v(" "),s("ul",[s("li",[a._v("array.reverse() 方法用于颠倒数组中元素的顺序。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2,4,6,8];\narr.reverse();//[8,6,4,2]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[a._v("#")]),a._v(" slice()")]),a._v(" "),s("ul",[s("li",[a._v("array.slice(start, end)方法可从已有的数组中返回选定的元素。(包头不包尾)")]),a._v(" "),s("li",[a._v("start\t必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。\nend\t可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2,4,6,8];\nvar a = arr.slice(1,2);\nconsole.log(a);//[4]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[a._v("#")]),a._v(" sort()")]),a._v(" "),s("ul",[s("li",[a._v("array.sort(sortfunction) 方法用于对数组的元素进行排序。排序顺序可以是字母或数字，并按升序或降序。默认排序顺序为按字母升序。")]),a._v(" "),s("li",[a._v("sortfunction\t可选。规定排序顺序。必须是函数。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [7,2,4,5,3,6];\n//升序\narr.sort((a,b)=>a-b); //[2, 3, 4, 5, 6, 7]\n//降序\narr.sort((a,b)=>b-a);//[7, 6, 5, 4, 3, 2]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"splice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[a._v("#")]),a._v(" splice()")]),a._v(" "),s("ul",[s("li",[a._v("array.splice(index,howmany,item1,.....,itemX) 方法用于插入、删除或替换数组的元素。")]),a._v(" "),s("li",[a._v('index\t必需。规定从何处添加/删除元素。该参数是开始插入和（或）删除的数组元素的下标，必须是数字。howmany\t必需。规定应该删除多少元素。必须是数字，但可以是 "0"。如果未规定此参数，则删除从 index 开始到原数组结尾的所有元素。item1, ..., itemX\t可选。要添加到数组的新元素')])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = [2, 3, 4, 5, 6, 7];\narr.splice(0,0,1); //[1, 2, 3, 4, 5, 6, 7];//向数组指定位置插入元素\narr.splice(0,1,'a');//['a', 2, 3, 4, 5, 6, 7];//替换数组指定位置元素\narr.splice(0,1);//[2, 3, 4, 5, 6, 7];//删除数组指定位置元素\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[a._v("#")]),a._v(" toString()")]),a._v(" "),s("ul",[s("li",[a._v("array.toString() 方法可把数组转换为字符串，并返回结果")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var arr = ['my','name','is','lisi'];\nvar arrNew = arr.toString();//my,name,is,lisi\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])])}),[],!1,null,null,null);r.default=t.exports}}]);